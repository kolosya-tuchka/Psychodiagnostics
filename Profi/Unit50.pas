unit Unit50;

interface

uses
  WinApi.Windows, WinApi.Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, xmldom, XMLIntf, XMLDoc, ExtCtrls, Menus;

type
  TForm50 = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Button1: TButton;
    RadioGroup1: TRadioGroup;
    Button2: TButton;
    MainMenu1: TMainMenu;
    N1: TMenuItem;
    procedure FormShow(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure N1Click(Sender: TObject);

   
    
  private
    { Private declarations }
   public


  Id_vopros:integer;
  //countquest:integer;

    { Public declarations }
  end;
const n=3;
var
  Form50: TForm50;
  countquest:integer;

  Select: Array of integer;
  Balls: Array[1..4] of Integer;

implementation

uses Unit35, Unit51, Unit64, Unit49, Unit67, Unit66, Unit8;

{$R *.dfm}

procedure TForm50.FormShow(Sender: TObject);
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
i,j,nomer,message: integer;
begin
RadioGroup1.Items.Clear;
  Case Form49.N_glava of
  0:begin
    Case Form49.N_metod of
    0,1,2,5,6:begin
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\1' + inttostr(Form49.N_metod+1) + '.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      countquest := XmLquestions.ChildNodes.Count;
      SetLength(Select,countquest);
      Form50.Caption:= 'Âîïðîñ 1 èç ' + IntToStr(countquest);
      XmLquestion :=XmLquestions.ChildNodes[0];
      Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      for j:=0 to  XmLvariants.ChildNodes.Count-1 do
        begin
        XmLvariant :=Xmlvariants.ChildNodes[j];
        RadioGroup1.Items.Add(VarToStr(Xmlvariant.Attributes['text']));
        RadioGroup1.Buttons[j].WordWrap := True;
        RadioGroup1.Buttons[j].Checked :=True;
        end;
    end;

 end;
 end;
 1:begin
  Case Form49.N_metod of
    0,1,2,3:begin
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\2' + inttostr(Form49.N_metod+1) + '.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      countquest := XmLquestions.ChildNodes.Count;
      SetLength(Select,countquest);
      Form50.Caption:= 'Âîïðîñ 1 èç ' + IntToStr(countquest);
      XmLquestion :=XmLquestions.ChildNodes[0];
      Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      for j:=0 to  XmLvariants.ChildNodes.Count-1 do
        begin
        XmLvariant :=Xmlvariants.ChildNodes[j];
        RadioGroup1.Items.Add(VarToStr(Xmlvariant.Attributes['text']));
        RadioGroup1.Buttons[j].WordWrap := True;
        RadioGroup1.Buttons[j].Checked :=True;
        end;
    end;
   end;
  end;
 2:begin
 Case Form49.N_metod of
    0,1,3,4,5,6,7:begin
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\3' + inttostr(Form49.N_metod+1) + '.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      countquest := XmLquestions.ChildNodes.Count;
      SetLength(Select,countquest);
      Form50.Caption:= 'Âîïðîñ 1 èç ' + IntToStr(countquest);
      XmLquestion :=XmLquestions.ChildNodes[0];
      Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      for j:=0 to  XmLvariants.ChildNodes.Count-1 do
        begin
        XmLvariant :=Xmlvariants.ChildNodes[j];
        RadioGroup1.Items.Add(VarToStr(Xmlvariant.Attributes['text']));
        RadioGroup1.Buttons[j].WordWrap := True;
        RadioGroup1.Buttons[j].Checked :=True;
        end;
    end;
   end;
 end;
 end;

Id_vopros:=0;
end;


procedure Key_7;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
i,g,max:integer;
bals: Array [1..6] of Integer;
ch: Integer;
begin
for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\17.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
   XmLvariant :=Xmlvariants.ChildNodes[Select[i-1]-1];
   ch:=StrToInt(VarToStr(Xmlvariant.Attributes['character']));
   case ch of
   1:begin
    bals[1]:=bals[1] + 1;
   end;
   2:begin
    bals[2]:=bals[2] + 1;
   end;
   3:begin
    bals[3]:=bals[3] + 1;
   end;
   4:begin
    bals[4]:=bals[4] + 1;
   end;
   5:begin
    bals[5]:=bals[5] + 1;
   end;
   6:begin
    bals[6]:=bals[6] + 1;
   end;

   end;
  end;
max:=1;
  for g:=1 to 6 do
    begin
      if bals[max]<bals[g] then
        begin
          max:= g;
        end;
     end;
  Form66.Memo1.Clear;
   case max of
    1:begin
      Form66.Memo1.Lines.Add('Òèï ëè÷íîñòè ÐÅÀËÈÑÒÈ×ÅÑÊÈÉ ÈËÈ ÏÐÀÊÒÈ×ÅÑÊÈÉ');
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\17_character.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[0];
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      XmLvariant :=Xmlvariants.ChildNodes[0];
      Form66.Memo1.Lines.Add(VarToStr(Xmlvariant.Attributes['text']));
    end;
    2:begin
      Form66.Memo1.Lines.Add('Òèï ëè÷íîñòè ÈÍÒÅËËÅÊÒÓÀËÜÍÛÉ');
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\17_character.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[1];
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      XmLvariant :=Xmlvariants.ChildNodes[0];
      Form66.Memo1.Lines.Add(VarToStr(Xmlvariant.Attributes['text']));
    end;
    3:begin
      Form66.Memo1.Lines.Add('Òèï ëè÷íîñòè ÑÎÖÈÀËÜÍÛÉ');
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\17_character.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[2];
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      XmLvariant :=Xmlvariants.ChildNodes[0];
      Form66.Memo1.Lines.Add(VarToStr(Xmlvariant.Attributes['text']));
    end;
    4:begin
      Form66.Memo1.Lines.Add('Òèï ëè÷íîñòè ÊÎÍÂÅÍÖÈÀËÜÍÛÈ ÈËÈ ÑÒÀÍÄÀÐÒÍÛÉ');
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\17_character.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[3];
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      XmLvariant :=Xmlvariants.ChildNodes[0];
      Form66.Memo1.Lines.Add(VarToStr(Xmlvariant.Attributes['text']));
    end;
    5:begin
      Form66.Memo1.Lines.Add('Òèï ëè÷íîñòè ÏÐÅÄÏÐÈÈÌ×ÈÂÛÉ');
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\17_character.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[4];
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      XmLvariant :=Xmlvariants.ChildNodes[0];
      Form66.Memo1.Lines.Add(VarToStr(Xmlvariant.Attributes['text']));
    end;
    6:begin
      Form66.Memo1.Lines.Add('Òèï ëè÷íîñòè ÀÐÒÈÑÒÈ×ÅÑÊÈÉ');
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\17_character.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[5];
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      XmLvariant :=Xmlvariants.ChildNodes[0];
      Form66.Memo1.Lines.Add(VarToStr(Xmlvariant.Attributes['text']));
    end;
  end;
    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form66.Label2.Caption:=myDate;
    Form66.Memo1.Visible:=True;
    Form66.ShowModal;
end;


procedure Key_6;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
i,j,g,bal,max:integer;
bals: Array [1..25] of Integer;
ch:Integer;
begin
for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\16.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];

   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
  case ch of
   1:begin
      case Select[i-1] of
        1: bals[1]:=bals[1] + 2;
        2: bals[1]:=bals[1] + 1;
        3: bals[1]:=bals[1] + 0;
        4: bals[1]:=bals[1] - 1;
        5: bals[1]:=bals[1] - 2;
      end;
   end;
   2:begin
       case Select[i-1] of
        1: bals[2]:=bals[2] + 2;
        2: bals[2]:=bals[2] + 1;
        3: bals[2]:=bals[2] + 0;
        4: bals[2]:=bals[2] - 1;
        5: bals[2]:=bals[2] - 2;
      end;
   end;
   3:begin
      case Select[i-1] of
        1: bals[3]:=bals[3] + 2;
        2: bals[3]:=bals[3] + 1;
        3: bals[3]:=bals[3] + 0;
        4: bals[3]:=bals[3] - 1;
        5: bals[3]:=bals[3] - 2;
      end;
   end;
   4:begin
      case Select[i-1] of
        1: bals[4]:=bals[4] + 2;
        2: bals[4]:=bals[4] + 1;
        3: bals[4]:=bals[4] + 0;
        4: bals[4]:=bals[4] - 1;
        5: bals[4]:=bals[4] - 2;
      end;
   end;
   5:begin
      case Select[i-1] of
        1: bals[5]:=bals[5] + 2;
        2: bals[5]:=bals[5] + 1;
        3: bals[5]:=bals[5] + 0;
        4: bals[5]:=bals[5] - 1;
        5: bals[5]:=bals[5] - 2;
      end;
   end;
   6:begin
      case Select[i-1] of
        1: bals[6]:=bals[6] + 2;
        2: bals[6]:=bals[6] + 1;
        3: bals[6]:=bals[6] + 0;
        4: bals[6]:=bals[6] - 1;
        5: bals[6]:=bals[6] - 2;
      end;
   end;
   7:begin
      case Select[i-1] of
        1: bals[7]:=bals[7] + 2;
        2: bals[7]:=bals[7] + 1;
        3: bals[7]:=bals[7] + 0;
        4: bals[7]:=bals[7] - 1;
        5: bals[7]:=bals[7] - 2;
      end;
   end;
   8:begin
       case Select[i-1] of
        1: bals[8]:=bals[8] + 2;
        2: bals[8]:=bals[8] + 1;
        3: bals[8]:=bals[8] + 0;
        4: bals[8]:=bals[8] - 1;
        5: bals[8]:=bals[8] - 2;
      end;
   end;
   9:begin
      case Select[i-1] of
        1: bals[9]:=bals[9] + 2;
        2: bals[9]:=bals[9] + 1;
        3: bals[9]:=bals[9] + 0;
        4: bals[9]:=bals[9] - 1;
        5: bals[9]:=bals[9] - 2;
      end;
   end;
   10:begin
      case Select[i-1] of
        1: bals[10]:=bals[10] + 2;
        2: bals[10]:=bals[10] + 1;
        3: bals[10]:=bals[10] + 0;
        4: bals[10]:=bals[10] - 1;
        5: bals[10]:=bals[10] - 2;
      end;
   end;
   11:begin
      case Select[i-1] of
        1: bals[11]:=bals[11] + 2;
        2: bals[11]:=bals[11] + 1;
        3: bals[11]:=bals[11] + 0;
        4: bals[11]:=bals[11] - 1;
        5: bals[11]:=bals[11] - 2;
      end;
   end;
   12:begin
       case Select[i-1] of
        1: bals[12]:=bals[12] + 2;
        2: bals[12]:=bals[12] + 1;
        3: bals[12]:=bals[12] + 0;
        4: bals[12]:=bals[12] - 1;
        5: bals[12]:=bals[12] - 2;
      end;
    end;
   13:begin
       case Select[i-1] of
        1: bals[13]:=bals[13] + 2;
        2: bals[13]:=bals[13] + 1;
        3: bals[13]:=bals[13] + 0;
        4: bals[13]:=bals[13] - 1;
        5: bals[13]:=bals[13] - 2;
      end;
   end;
   14:begin
       case Select[i-1] of
        1: bals[14]:=bals[14] + 2;
        2: bals[14]:=bals[14] + 1;
        3: bals[14]:=bals[14] + 0;
        4: bals[14]:=bals[14] - 1;
        5: bals[14]:=bals[14] - 2;
      end;
   end;
   15:begin
      case Select[i-1] of
        1: bals[15]:=bals[15] + 2;
        2: bals[15]:=bals[15] + 1;
        3: bals[15]:=bals[15] + 0;
        4: bals[15]:=bals[15] - 1;
        5: bals[15]:=bals[15] - 2;
      end;
   end;
   16:begin
      case Select[i-1] of
        1: bals[16]:=bals[16] + 2;
        2: bals[16]:=bals[16] + 1;
        3: bals[16]:=bals[16] + 0;
        4: bals[16]:=bals[16] - 1;
        5: bals[16]:=bals[16] - 2;
      end;
   end;
   17:begin
      case Select[i-1] of
        1: bals[17]:=bals[17] + 2;
        2: bals[17]:=bals[17] + 1;
        3: bals[17]:=bals[17] + 0;
        4: bals[17]:=bals[17] - 1;
        5: bals[17]:=bals[17] - 2;
      end;
   end;
   18:begin
      case Select[i-1] of
        1: bals[i+18]:=bals[i+18] + 2;
        2: bals[i+18]:=bals[i+18] + 1;
        3: bals[i+18]:=bals[i+18] + 0;
        4: bals[i+18]:=bals[i+18] - 1;
        5: bals[i+18]:=bals[i+18] - 2;
      end;
   end;
   19:begin
      case Select[i-1] of
        1: bals[19]:=bals[19] + 2;
        2: bals[19]:=bals[19] + 1;
        3: bals[19]:=bals[19] + 0;
        4: bals[19]:=bals[19] - 1;
        5: bals[19]:=bals[19] - 2;
      end;
   end;
   20:begin
      case Select[i-1] of
        1: bals[20]:=bals[20] + 2;
        2: bals[20]:=bals[20] + 1;
        3: bals[20]:=bals[20] + 0;
        4: bals[20]:=bals[20] - 1;
        5: bals[20]:=bals[20] - 2;
      end;
   end;
   21:begin
      case Select[i-1] of
        1: bals[21]:=bals[21] + 2;
        2: bals[21]:=bals[21] + 1;
        3: bals[21]:=bals[21] + 0;
        4: bals[21]:=bals[21] - 1;
        5: bals[21]:=bals[21] - 2;
      end;
   end;
   22:begin
      case Select[i-1] of
        1: bals[22]:=bals[22] + 2;
        2: bals[22]:=bals[22] + 1;
        3: bals[22]:=bals[22] + 0;
        4: bals[22]:=bals[22] - 1;
        5: bals[22]:=bals[22] - 2;
      end;
   end;
   23:begin
     case Select[i-1] of
        1: bals[23]:=bals[23] + 2;
        2: bals[23]:=bals[23] + 1;
        3: bals[23]:=bals[23] + 0;
        4: bals[23]:=bals[23] - 1;
        5: bals[23]:=bals[23] - 2;
      end;
   end;
   24:begin
      case Select[i-1] of
        1: bals[24]:=bals[24] + 2;
        2: bals[24]:=bals[24] + 1;
        3: bals[24]:=bals[24] + 0;
        4: bals[24]:=bals[24] - 1;
        5: bals[24]:=bals[24] - 2;
      end;
    end;
   end;
end;
Form66.Memo1.Clear;
  For i:=1 to 24 do begin
      case i of
        1:Form66.Memo1.Lines.Add('Áèîëîãèÿ:');
        2:Form66.Memo1.Lines.Add('Ôèçèêà:');
        3:Form66.Memo1.Lines.Add('Õèìèÿ:');
        4:Form66.Memo1.Lines.Add('Ãåîãðàôèÿ:');
        5:Form66.Memo1.Lines.Add('Ìåäèöèíà:');
        6:Form66.Memo1.Lines.Add('Òåõíèêà è ýëåêòðîíèêà:');
        7:Form66.Memo1.Lines.Add('Ñòðîèòåëüñòâî:');
        8:Form66.Memo1.Lines.Add('Ìàòåìàòèêà:');
        9:Form66.Memo1.Lines.Add('Ýêîíîìèêà:');
        10:Form66.Memo1.Lines.Add('Ôèëîëîãèÿ:');
        11:Form66.Memo1.Lines.Add('Òðàíñïîðò:');
        12:Form66.Memo1.Lines.Add('Àâèàöèÿ è ìîðñêîå äåëî:');
        13:Form66.Memo1.Lines.Add('Âîåííûå ñïåöèàëüíîñòè:');
        14:Form66.Memo1.Lines.Add('Èñòîðèÿ:');
        15:Form66.Memo1.Lines.Add('Ðàáî÷èå ñïåöèàëüíîñòè:');
        16:Form66.Memo1.Lines.Add('Æóðíàëèñòèêà:');
        17:Form66.Memo1.Lines.Add('Þðèñïðóäåíöèÿ:');
        18:Form66.Memo1.Lines.Add('Ïåäàãîãèêà:');
        19:Form66.Memo1.Lines.Add('Ñôåðà îáñëóæèâàíèÿ, òîðãîâëÿ:');
        20:Form66.Memo1.Lines.Add('Ôèçêóëüòóðà è ñïîðò:');
        21:Form66.Memo1.Lines.Add('Ìóçûêà:');
        22:Form66.Memo1.Lines.Add('Ñöåíè÷åñêîå èñêóññòâî:');
        23:Form66.Memo1.Lines.Add('Èçîáðàçèòåëüíîå èñêóññòâî:');
        24:Form66.Memo1.Lines.Add('Ýêîëîãèÿ:');
     end;
       case bals[i+1] of
        -12..-6:begin
            Form66.Memo1.Lines.Add('Âûñøàÿ ñòåïåíü îòðèöàíèÿ;');
            Form66.Memo1.Lines.Add(' ');
         end;
        -5..-1:begin
            Form66.Memo1.Lines.Add('Èíòåðåñ îòðèöàåòñÿ;');
            Form66.Memo1.Lines.Add(' ');
        end;
        0:begin
            Form66.Memo1.Lines.Add('-----;');
            Form66.Memo1.Lines.Add(' ');
        end;
        1..4:begin
           Form66.Memo1.Lines.Add('Èíòåðåñ âûðàæåí ñëàáî;');
           Form66.Memo1.Lines.Add(' ');
        end;
        5..7:begin
           Form66.Memo1.Lines.Add('Âûðàæåííûé èíòåðåñ;');
           Form66.Memo1.Lines.Add(' ');
        end;
        8..12: begin
          Form66.Memo1.Lines.Add('ßðêî âûðàæåííûé èíòåðåñ;');
          Form66.Memo1.Lines.Add(' ');
        end;
      end;
   end;
  myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
  Form66.Label2.Caption:=myDate;
  Form66.Memo1.Visible:=True;
  Form66.ShowModal;

end;


procedure Key_3;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
i:integer;
bals: Array [1..6] of Integer;
ch: Integer;
begin
for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\13.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
   XmLvariant :=Xmlvariants.ChildNodes[Select[i-1]-1];
   ch:=StrToInt(VarToStr(Xmlvariant.Attributes['character']));
   case ch of
   1:begin
    bals[1]:=bals[1] + 1;
    Form51.Label1.Visible:=True;
   end;
   2:begin
    bals[2]:=bals[2] + 1;
    Form51.Label2.Visible:=True;
   end;
   3:begin
    bals[3]:=bals[3] + 1;
    Form51.Label3.Visible:=True;
   end;
   4:begin
    bals[4]:=bals[4] + 1;
    Form51.Label4.Visible:=True;
   end;
   5:begin
    bals[5]:=bals[5] + 1;
    Form51.Label7.Visible:=True;
   end;
   6:begin
    bals[6]:=bals[6] + 1;
    Form51.Label8.Visible:=True;
   end;

   end;
  end;
  case bals[1] of
    0..1: Form51.Label1.Caption:= '"×åëîâåê - ïðèðîäà": ' + 'ðàáîòà ñ òàêèì ïðåäìåòîì òðóäà àêòèâíî îòâåðãàåòñÿ: "÷òî óãîäíî, òîëüêî íå ýòî". ';
    2..3: Form51.Label1.Caption:= '"×åëîâåê - ïðèðîäà": ' + 'ñêëîííîñòü íå âûðàæåíà. ';
    4..6: Form51.Label1.Caption:= '"×åëîâåê - ïðèðîäà": ' + 'ñêëîííîñòü íà ñðåäíåì óðîâíå. ';
    7..8: Form51.Label1.Caption:= '"×åëîâåê - ïðèðîäà": ' + 'âûðàæåííàÿ ñêëîííîñòü. ';
    9..10:Form51.Label1.Caption:= '"×åëîâåê - ïðèðîäà": ' + 'ÿðêî âûðàæåííàÿ ñêëîííîñòü. ';
    end;
  case bals[2] of
    0..1: Form51.Label2.Caption:= '"×åëîâåê - òåõíèêà": ' + 'ðàáîòà ñ òàêèì ïðåäìåòîì òðóäà àêòèâíî îòâåðãàåòñÿ: "÷òî óãîäíî, òîëüêî íå ýòî". ';
    2..3: Form51.Label2.Caption:= '"×åëîâåê - òåõíèêà": ' + 'ñêëîííîñòü íå âûðàæåíà. ';
    4..6: Form51.Label2.Caption:= '"×åëîâåê - òåõíèêà": ' + 'ñêëîííîñòü íà ñðåäíåì óðîâíå. ';
    7..8: Form51.Label2.Caption:= '"×åëîâåê - òåõíèêà": ' + 'âûðàæåííàÿ ñêëîííîñòü. ';
    9..10:Form51.Label2.Caption:= '"×åëîâåê - òåõíèêà": ' + 'ÿðêî âûðàæåííàÿ ñêëîííîñòü. ';
    end;
  case bals[3] of
    0..1: Form51.Label3.Caption:= '"×åëîâåê - äðóãîé ÷åëîâåê": ' + 'ðàáîòà ñ òàêèì ïðåäìåòîì òðóäà àêòèâíî îòâåðãàåòñÿ: "÷òî óãîäíî, òîëüêî íå ýòî". ';
    2..3: Form51.Label3.Caption:= '"×åëîâåê - äðóãîé ÷åëîâåê": ' + 'ñêëîííîñòü íå âûðàæåíà. ';
    4..6: Form51.Label3.Caption:= '"×åëîâåê - äðóãîé ÷åëîâåê": ' + 'ñêëîííîñòü íà ñðåäíåì óðîâíå. ';
    7..8: Form51.Label3.Caption:= '"×åëîâåê - äðóãîé ÷åëîâåê": ' + 'âûðàæåííàÿ ñêëîííîñòü. ';
    9..10:Form51.Label3.Caption:= '"×åëîâåê - äðóãîé ÷åëîâåê": ' + 'ÿðêî âûðàæåííàÿ ñêëîííîñòü. ';
    end;
  case bals[4] of
    0..1: Form51.Label4.Caption:= '"×åëîâåê - çíàêîâàÿ ñèñòåìà": ' + 'ðàáîòà ñ òàêèì ïðåäìåòîì òðóäà àêòèâíî îòâåðãàåòñÿ: "÷òî óãîäíî, òîëüêî íå ýòî". ';
    2..3: Form51.Label4.Caption:= '"×åëîâåê - çíàêîâàÿ ñèñòåìà": ' + 'ñêëîííîñòü íå âûðàæåíà. ';
    4..6: Form51.Label4.Caption:= '"×åëîâåê - çíàêîâàÿ ñèñòåìà": ' + 'ñêëîííîñòü íà ñðåäíåì óðîâíå. ';
    7..8: Form51.Label4.Caption:= '"×åëîâåê - çíàêîâàÿ ñèñòåìà": ' + 'âûðàæåííàÿ ñêëîííîñòü. ';
    9..10:Form51.Label4.Caption:= '"×åëîâåê - çíàêîâàÿ ñèñòåìà": ' + 'ÿðêî âûðàæåííàÿ ñêëîííîñòü. ';
    end;
  case bals[5] of
    0..1: Form51.Label5.Caption:= '"×åëîâåê -  õóäîæåñòâåííûé îáðàç": ' + 'ðàáîòà ñ òàêèì ïðåäìåòîì òðóäà àêòèâíî îòâåðãàåòñÿ: "÷òî óãîäíî, òîëüêî íå ýòî". ';
    2..3: Form51.Label5.Caption:= '"×åëîâåê -  õóäîæåñòâåííûé îáðàç": ' + 'ñêëîííîñòü íå âûðàæåíà. ';
    4..6: Form51.Label5.Caption:= '"×åëîâåê -  õóäîæåñòâåííûé îáðàç": ' + 'ñêëîííîñòü íà ñðåäíåì óðîâíå. ';
    7..8: Form51.Label5.Caption:= '"×åëîâåê -  õóäîæåñòâåííûé îáðàç": ' + 'âûðàæåííàÿ ñêëîííîñòü. ';
    9..10:Form51.Label5.Caption:= '"×åëîâåê -  õóäîæåñòâåííûé îáðàç": ' + 'ÿðêî âûðàæåííàÿ ñêëîííîñòü. ';
    end;
  case bals[6] of
    0..1: Form51.Label6.Caption:= '"Ñàì ÷åëîâåê": ' + 'ðàáîòà ñ òàêèì ïðåäìåòîì òðóäà àêòèâíî îòâåðãàåòñÿ: "÷òî óãîäíî, òîëüêî íå ýòî". ';
    2..3: Form51.Label6.Caption:= '"Ñàì ÷åëîâåê": ' + 'ñêëîííîñòü íå âûðàæåíà. ';
    4..6: Form51.Label6.Caption:= '"Ñàì ÷åëîâåê": ' + 'ñêëîííîñòü íà ñðåäíåì óðîâíå. ';
    7..8: Form51.Label6.Caption:= '"Ñàì ÷åëîâåê": ' + 'âûðàæåííàÿ ñêëîííîñòü. ';
    9..10:Form51.Label6.Caption:= '"Ñàì ÷åëîâåê": ' + 'ÿðêî âûðàæåííàÿ ñêëîííîñòü. ';
    end;
    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form51.Label8.Caption:=myDate;
    Form51.Memo1.Clear;
Form51.ShowModal;
end;


procedure Key_2;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
i:integer;
ch: Array[1..2] of Integer;
begin
For I:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\12.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   //Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
   XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
   XmLvariant :=Xmlvariants.ChildNodes[Select[i-1]-1];
   ch[i]:=StrToInt(VarToStr(Xmlvariant.Attributes['character']));
  end;
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\12_character.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[ch[2]-1];
   XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
   XmLvariant :=Xmlvariants.ChildNodes[ch[1]-1];
   Form51.Label1.Visible:=True;
   Form51.Label1.Caption:= 'Ïðîôåññèè, ÿâëÿþùèåñÿ íàèáîëëå áëèçêèå âàøèì èíòåðåñàì è ñêëîííîñòÿì ';
   Form51.Label2.Visible:=True;
   Form51.Label2.Caption:=VarToStr(Xmlvariant.Attributes['text']);
   myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
   Form51.Label8.Caption:=myDate;
   //Form51.Memo1.Visible:=True;
   Form51.Memo1.Clear;
Form51.ShowModal;
end;


procedure Key_1;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
ch,i:integer;
begin
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\11.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   //Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
   XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
   XmLvariant :=Xmlvariants.ChildNodes[Select[i-1]-1];
   ch:=StrToInt(VarToStr(Xmlvariant.Attributes['character']));
   case ch of
   1:begin
    balls[1]:=balls[1] + StrToInt(VarToStr(Xmlvariant.Attributes['bal']));
    Form51.Label1.Visible:=True;
   end;
   2:begin
    balls[2]:=balls[2] + StrToInt(VarToStr(Xmlvariant.Attributes['bal']));
    Form51.Label2.Visible:=True;
   end;
   3:begin
    balls[3]:=balls[3] + StrToInt(VarToStr(Xmlvariant.Attributes['bal']));
    Form51.Label3.Visible:=True;
   end;
   4:begin
    balls[4]:=balls[4] + StrToInt(VarToStr(Xmlvariant.Attributes['bal']));
    Form51.Label4.Visible:=True;
   end;
   end;
  end;
  case balls[1] of

    0..4: Form51.Label1.Caption:= 'Íåîïðåäåëåííîå ñîñòîÿíèå ïðîôåññèîíàëüíîé èäåíòè÷íîñòè: ' + 'Ñëàáî âûðàæåííûé ñòàòóñ. ';
    5..9:  Form51.Label1.Caption:= 'Íåîïðåäåëåííîå ñîñòîÿíèå ïðîôåññèîíàëüíîé èäåíòè÷íîñòè: ' + 'Âûðàæåííîñòü íèæå ñðåäíåãî óðîâíÿ. ';
    10..14: Form51.Label1.Caption:= 'Íåîïðåäåëåííîå ñîñòîÿíèå ïðîôåññèîíàëüíîé èäåíòè÷íîñòè: ' + 'Ñðåäíÿÿ ñòåïåíü âûðàæåííîñòè. ';
    15..19: Form51.Label1.Caption:= 'Íåîïðåäåëåííîå ñîñòîÿíèå ïðîôåññèîíàëüíîé èäåíòè÷íîñòè: ' + 'Âûðàæåííîñòü âûøå ñðåäíåãî óðîâíÿ. ';
    20..30: Form51.Label1.Caption:= 'Íåîïðåäåëåííîå ñîñòîÿíèå ïðîôåññèîíàëüíîé èäåíòè÷íîñòè: ' + 'Ñèëüíî âûðàæåííûé ñòàòóñ. ';
    end;
  case balls[2] of
    0..3: Form51.Label2.Caption:= 'Ñôîðìèðîâàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Ñëàáî âûðàæåííûé ñòàòóñ. ';
    4..7:  Form51.Label2.Caption:= 'Ñôîðìèðîâàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Âûðàæåííîñòü íèæå ñðåäíåãî óðîâíÿ. ';
    8..11: Form51.Label2.Caption:= 'Ñôîðìèðîâàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Ñðåäíÿÿ ñòåïåíü âûðàæåííîñòè. ';
    12..15: Form51.Label2.Caption:= 'Ñôîðìèðîâàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Âûðàæåííîñòü âûøå ñðåäíåãî óðîâíÿ. ';
    16..30: Form51.Label2.Caption:= 'Ñôîðìèðîâàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Ñèëüíî âûðàæåííûé ñòàòóñ. ';
    end;
  case balls[3] of
    0..2: Form51.Label3.Caption:= 'Ìîðàòîðèé (êðèçèñ âûáîðà): ' + 'Ñëàáî âûðàæåííûé ñòàòóñ. ';
    3..5:  Form51.Label3.Caption:= 'Ìîðàòîðèé (êðèçèñ âûáîðà): ' + 'Âûðàæåííîñòü íèæå ñðåäíåãî óðîâíÿ. ';
    6..8: Form51.Label3.Caption:= 'Ìîðàòîðèé (êðèçèñ âûáîðà): ' + 'Ñðåäíÿÿ ñòåïåíü âûðàæåííîñòè. ';
    9..11: Form51.Label3.Caption:= 'Ìîðàòîðèé (êðèçèñ âûáîðà): ' + 'Âûðàæåííîñòü âûøå ñðåäíåãî óðîâíÿ. ';
    12..30: Form51.Label3.Caption:= 'Ìîðàòîðèé (êðèçèñ âûáîðà): ' + 'Ñèëüíî âûðàæåííûé ñòàòóñ. ';
    end;
  case balls[4] of
    0..4: Form51.Label4.Caption:= 'Íàâÿçàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Ñëàáî âûðàæåííûé ñòàòóñ. ';
    5..9:  Form51.Label4.Caption:= 'Íàâÿçàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Âûðàæåííîñòü íèæå ñðåäíåãî óðîâíÿ. ';
    10..14: Form51.Label4.Caption:= 'Íàâÿçàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Ñðåäíÿÿ ñòåïåíü âûðàæåííîñòè. ';
    15..19: Form51.Label4.Caption:= 'Íàâÿçàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Âûðàæåííîñòü âûøå ñðåäíåãî óðîâíÿ. ';
    20..30: Form51.Label4.Caption:= 'Íàâÿçàííàÿ ïðîôåññèîíàëüíàÿ èäåíòè÷íîñòü: ' + 'Ñèëüíî âûðàæåííûé ñòàòóñ. ';
    end;
    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form51.Label8.Caption:=myDate;
    Form51.Memo1.Visible:=True;
    Form51.Memo1.Clear;
Form51.ShowModal;
end;

procedure Key_24;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
bls:Array[1..8] of Integer;
myDate:string;
ch,i:integer;
begin
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\24.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   case ch of
   1:begin
     bls[1]:=bls[1] + (select[i-1]-1);
    end;
   2:begin
     bls[2]:=bls[2] + (select[i-1]-1);
     end;
   3:begin
    bls[3]:=bls[3] + (select[i-1]-1);
   end;
   4:begin
    bls[4]:=bls[4] + (select[i-1]-1);
   end;
   5:begin
    bls[5]:=bls[5] + (select[i-1]-1);
   end;
   6:begin
    bls[6]:=bls[6] + (select[i-1]-1);
   end;
   7:begin
    bls[7]:=bls[7] + (select[i-1]-1);
   end;
   8:begin
    bls[8]:=bls[8] + (select[i-1]-1);
   end;
   end;
  end;
  if (bls[1]-bls[2])<0 then
    begin
    Form51.Label1.Caption:='Äîìèíèðóþùàÿ õàðàêòåðèñòèêà: Îáùèòåëüíîñòü';
    Form51.Label1.Visible:=True;
    end
    else
    begin
    Form51.Label1.Caption:='Äîìèíèðóþùàÿ õàðàêòåðèñòèêà: Èíäèâèäóàëèçì';
    Form51.Label1.Visible:=True;
    end;

  if (bls[3]-bls[4])<0 then
    begin
    Form51.Label2.Caption:='Äîìèíèðóþùàÿ õàðàêòåðèñòèêà: Ïàññèâíîñòü. ';
    Form51.Label2.Visible:=True;
    end
    else
    begin
    Form51.Label2.Caption:='Äîìèíèðóþùàÿ õàðàêòåðèñòèêà: Óâåðåííîñòü. ';
    Form51.Label2.Visible:=True;
    end;

  if (bls[5]-bls[6])<0 then
    begin
    Form51.Label3.Caption:='Äîìèíèðóþùàÿ õàðàêòåðèñòèêà: Îðèåíòàöèÿ íà ôàêòû. ';
    Form51.Label3.Visible:=True;
    end
    else
    begin
    Form51.Label3.Caption:='Äîìèíèðóþùàÿ õàðàêòåðèñòèêà: Îðèåíòàöèÿ íà âîîáðàæåíèå. ';
    Form51.Label3.Visible:=True;
    end;

  if (bls[7]-bls[8])<0 then
    begin
    Form51.Label4.Caption:='Äîìèíèðóþùàÿ õàðàêòåðèñòèêà: Îñìîòðèòåëüíîñòü. ';
    Form51.Label4.Visible:=True;
    end
    else
    begin
    Form51.Label4.Caption:='Äîìèíèðóþùàÿ õàðàêòåðèñòèêà: Ñïîíòàííîñòü. ';
    Form51.Label4.Visible:=True;
    end;

    if  (bls[1]-bls[2])=0 then Form51.Label1.Caption:='Ïî îòíîøåíèþ ê õàðàêòåðèñòèêå "Èíäèâèäóàëèçì" âàøå ïîâåäåíèå èçìåí÷èâî è ðåäêî ïðîÿâëÿåòñÿ â êàêèõ-òî êðàéíîñòÿõ. ';

    if  (bls[3]-bls[4])=0 then Form51.Label2.Caption:='Ïî îòíîøåíèþ ê õàðàêòåðèñòèêå "Óâåðåííîñòü" âàøå ïîâåäåíèå èçìåí÷èâî è ðåäêî ïðîÿâëÿåòñÿ â êàêèõ-òî êðàéíîñòÿõ. ';

    if  (bls[5]-bls[6])=0 then Form51.Label3.Caption:='Ïî îòíîøåíèþ ê õàðàêòåðèñòèêå "Îðèåíòàöèÿ íà âîîáðàæåíèå" âàøå ïîâåäåíèå èçìåí÷èâî è ðåäêî ïðîÿâëÿåòñÿ â êàêèõ-òî êðàéíîñòÿõ. ';

    if  (bls[7]-bls[8])=0 then Form51.Label4.Caption:='Ïî îòíîøåíèþ ê õàðàêòåðèñòèêå "Ñïîíòàííîñòü" âàøå ïîâåäåíèå èçìåí÷èâî è ðåäêî ïðîÿâëÿåòñÿ â êàêèõ-òî êðàéíîñòÿõ. ';



    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form51.Label8.Caption:=myDate;
    Form51.Memo1.Visible:=True;
    Form51.Memo1.Clear;
Form51.ShowModal;
end;

procedure Key_23;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
bls:Array[1..7] of Integer;
ch:Array[1..42] of Array[1..2] of Integer;
myDate:string;
i:integer;
begin
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\23.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch[i,1]:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   ch[i,2]:=StrToInt(VarToStr(XmLquestion.Attributes['bal']));
   case ch[i,1] of
   1:begin
   if select[i-1]=2 then
    begin
      bls[1]:=bls[1]+1;
    end
    else
      begin
        if select[i-1]=ch[i,2] then
        begin
        bls[1]:=bls[1] + 2;
        end;
        end;
    Form51.Label1.Visible:=True;
      end;
   2:begin
    if select[i-1]=2 then
    begin
      bls[2]:=bls[2]+1;
    end
    else
      begin
        if select[i-1]=ch[i,2] then
        begin
        bls[2]:=bls[2] + 2;
        end;
        end;
    Form51.Label2.Visible:=True;
   end;
   3:begin
    if select[i-1]=2 then
    begin
      bls[3]:=bls[3]+1;
    end
    else
      begin
        if select[i-1]=ch[i,2] then
        begin
        bls[3]:=bls[3] + 2;
        end;
        end;
    Form51.Label3.Visible:=True;
   end;
   4:begin
    if select[i-1]=2 then
    begin
      bls[4]:=bls[4]+1;
    end
    else
      begin
        if select[i-1]=ch[i,2] then
        begin
        bls[4]:=bls[4] + 2;
        end;
        end;
    Form51.Label4.Visible:=True;
   end;
   5:begin
    if select[i-1]=2 then
    begin
      bls[5]:=bls[5]+1;
    end
    else
      begin
        if select[i-1]=ch[i,2] then
        begin
        bls[5]:=bls[5] + 2;
        end;
        end;
    Form51.Label5.Visible:=True;
   end;
   6:begin
    if select[i-1]=2 then
    begin
      bls[6]:=bls[6]+1;
    end
    else
      begin
        if select[i-1]=ch[i,2] then
        begin
        bls[6]:=bls[6] + 2;
        end;
        end;
    Form51.Label6.Visible:=True;
   end;
   7:begin
    if select[i-1]=2 then
    begin
      bls[7]:=bls[7]+1;
    end
    else
      begin
        if select[i-1]=ch[i,2] then
        begin
        bls[7]:=bls[7] + 2;
        end;
        end;
    Form51.Label9.Visible:=True;
   end;
   end;
  end;
  case bls[1] of

    0..4: Form51.Label1.Caption:= 'Çàìêíóòîñòü - îáùèòåëüíîñòü: ' + 'íèçêèé ïîêàçàòåëü. ';
    5..8:  Form51.Label1.Caption:= 'Çàìêíóòîñòü - îáùèòåëüíîñòü: ' + 'ñðåäíèé ïîêàçàòåëü. ';
    9..12: Form51.Label1.Caption:= 'Çàìêíóòîñòü - îáùèòåëüíîñòü: ' + 'âûñîêèé ïîêàçàòåëü. ';
    end;
  case bls[2] of
    0..4: Form51.Label2.Caption:= 'Ýìîöèîíàëüíàÿ íåóñòîé÷èâîñòü - óñòîé÷èâîñòü: ' + 'íèçêèé ïîêàçàòåëü. ';
    5..8:  Form51.Label2.Caption:= 'Ýìîöèîíàëüíàÿ íåóñòîé÷èâîñòü - óñòîé÷èâîñòü: ' + 'ñðåäíèé ïîêàçàòåëü. ';
    9..12: Form51.Label2.Caption:= 'Ýìîöèîíàëüíàÿ íåóñòîé÷èâîñòü - óñòîé÷èâîñòü: ' + 'âûñîêèé ïîêàçàòåëü. ';
    end;
  case bls[3] of
    0..4: Form51.Label3.Caption:= 'Ñêëîííîñòü ê ïîä÷èíåíèþ - ê äîìèíèðîâàíèþ: ' + 'íèçêèé ïîêàçàòåëü. ';
    5..8:  Form51.Label3.Caption:= 'Ñêëîííîñòü ê ïîä÷èíåíèþ - ê äîìèíèðîâàíèþ: ' + 'ñðåäíèé ïîêàçàòåëü. ';
    9..12: Form51.Label3.Caption:= 'Ñêëîííîñòü ê ïîä÷èíåíèþ - ê äîìèíèðîâàíèþ: ' + 'âûñîêèé ïîêàçàòåëü. ';
    end;
  case bls[4] of
    0..4: Form51.Label4.Caption:= 'Ñäåðæàííîñòü - ýêñïðåññèâíîñòü: ' + 'íèçêèé ïîêàçàòåëü. ';
    5..8:  Form51.Label4.Caption:= 'Ñäåðæàííîñòü - ýêñïðåññèâíîñòü: ' + 'ñðåäíèé ïîêàçàòåëü. ';
    9..12: Form51.Label4.Caption:= 'Ñäåðæàííîñòü - ýêñïðåññèâíîñòü: ' + 'âûñîêèé ïîêàçàòåëü. ';
    end;
  case bls[5] of
    0..4: Form51.Label5.Caption:= 'Ðîáîñòü - ñìåëîñòü: ' + 'íèçêèé ïîêàçàòåëü. ';
    5..8:  Form51.Label5.Caption:= 'Ðîáîñòü - ñìåëîñòü: ' + 'ñðåäíèé ïîêàçàòåëü. ';
    9..12: Form51.Label5.Caption:= 'Ðîáîñòü - ñìåëîñòü: ' + 'âûñîêèé ïîêàçàòåëü. ';
    end;
    case bls[6] of
    0..4: Form51.Label6.Caption:= 'Äîâåð÷èâîñòü - ïîäîçðèòåëüíîñòü: ' + 'íèçêèé ïîêàçàòåëü. ';
    5..8:  Form51.Label6.Caption:= 'Äîâåð÷èâîñòü - ïîäîçðèòåëüíîñòü: ' + 'ñðåäíèé ïîêàçàòåëü. ';
    9..12: Form51.Label6.Caption:= 'Äîâåð÷èâîñòü - ïîäîçðèòåëüíîñòü: ' + 'âûñîêèé ïîêàçàòåëü. ';
    end;
    case bls[7] of
    0..4: Form51.Label9.Caption:= 'Óâåðåííîñòü â ñåáå - òðåâîæíîñòü: ' + 'íèçêèé ïîêàçàòåëü. ';
    5..8:  Form51.Label9.Caption:= 'Óâåðåííîñòü â ñåáå - òðåâîæíîñòü: ' + 'ñðåäíèé ïîêàçàòåëü. ';
    9..12: Form51.Label9.Caption:= 'Óâåðåííîñòü â ñåáå - òðåâîæíîñòü: ' + 'âûñîêèé ïîêàçàòåëü. ';
     end;
    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form51.Label8.Caption:=myDate;
    Form51.Memo1.Visible:=True;
    Form51.Memo1.Clear;
Form51.ShowModal;
end;

procedure Key_22;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
bls:Array[1..5] of Integer;
myDate:string;
ch,i:integer;
begin
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\22.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   case ch of
   1:begin
    case select[i-1] of
      1:bls[1]:=bls[1] + 0;
      2:bls[1]:=bls[1] + 1;
      3:bls[1]:=bls[1] + 2;
      end;
    Form51.Label1.Visible:=True;
   end;
   2:begin
   case select[i-1] of
      1:bls[2]:=bls[2] + 0;
      2:bls[2]:=bls[2] + 1;
      3:bls[2]:=bls[2] + 2;
      end;
    Form51.Label2.Visible:=True;
   end;
   3:begin
   case select[i-1] of
      1:bls[3]:=bls[3] + 0;
      2:bls[3]:=bls[3] + 1;
      3:bls[3]:=bls[3] + 2;
      end;
    Form51.Label3.Visible:=True;
   end;
   4:begin
   case select[i-1] of
      1:bls[4]:=bls[4] + 0;
      2:bls[4]:=bls[4] + 1;
      3:bls[4]:=bls[4] + 2;
      end;
    Form51.Label4.Visible:=True;
   end;
   5:begin
   case select[i-1] of
      1:bls[5]:=bls[5] + 0;
      2:bls[5]:=bls[5] + 1;
      3:bls[5]:=bls[5] + 2;
      end;
    Form51.Label5.Visible:=True;
   end;
   end;
  end;
  case bls[1] of

    0..3: Form51.Label1.Caption:= 'Ýêñòðàâåðñèÿ - èíòðîâåðñèÿ: ' + 'íèçêèé óðîâåíü âûðàæåííîñòè. ';
    4..6:  Form51.Label1.Caption:= 'Ýêñòðàâåðñèÿ - èíòðîâåðñèÿ: ' + 'íèæå ñðåäíåãî. ';
    7..9: Form51.Label1.Caption:= 'Ýêñòðàâåðñèÿ - èíòðîâåðñèÿ: ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè. ';
    10..12: Form51.Label1.Caption:= 'Ýêñòðàâåðñèÿ - èíòðîâåðñèÿ: ' + 'âûøå ñðåäíåãî. ';
    13..16: Form51.Label1.Caption:= 'Ýêñòðàâåðñèÿ - èíòðîâåðñèÿ: ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè. ';
    end;
  case bls[2] of
    0..3: Form51.Label2.Caption:= 'Íåéðîòèçì - ýìîöèîíàëüíàÿ óñòîé÷èâîñòü (ïîâûøåííàÿ ýìîöèîíàëüíîñòü ðåàêöèé): ' + 'íèçêèé óðîâåíü âûðàæåííîñòè. ';
    4..6:  Form51.Label2.Caption:= 'Íåéðîòèçì - ýìîöèîíàëüíàÿ óñòîé÷èâîñòü (ïîâûøåííàÿ ýìîöèîíàëüíîñòü ðåàêöèé): ' + 'íèæå ñðåäíåãî. ';
    7..9: Form51.Label2.Caption:= 'Íåéðîòèçì - ýìîöèîíàëüíàÿ óñòîé÷èâîñòü (ïîâûøåííàÿ ýìîöèîíàëüíîñòü ðåàêöèé): ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè. ';
    10..12: Form51.Label2.Caption:= 'Íåéðîòèçì - ýìîöèîíàëüíàÿ óñòîé÷èâîñòü (ïîâûøåííàÿ ýìîöèîíàëüíîñòü ðåàêöèé): ' + 'âûøå ñðåäíåãî. ';
    13..16: Form51.Label2.Caption:= 'Íåéðîòèçì - ýìîöèîíàëüíàÿ óñòîé÷èâîñòü (ïîâûøåííàÿ ýìîöèîíàëüíîñòü ðåàêöèé): ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè. ';
    end;
  case bls[3] of
    0..3: Form51.Label3.Caption:= 'Îòêðûòîñòü - çàêðûòîñòü ê íîâîìó îïûòó. : ' + 'íèçêèé óðîâåíü âûðàæåííîñòè. ';
    4..6:  Form51.Label3.Caption:= 'Îòêðûòîñòü - çàêðûòîñòü ê íîâîìó îïûòó. : ' + 'íèæå ñðåäíåãî. ';
    7..9: Form51.Label3.Caption:= 'Îòêðûòîñòü - çàêðûòîñòü ê íîâîìó îïûòó. : ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè. ';
    10..12: Form51.Label3.Caption:= 'Îòêðûòîñòü - çàêðûòîñòü ê íîâîìó îïûòó. : ' + 'âûøå ñðåäíåãî. ';
    13..16: Form51.Label3.Caption:= 'Îòêðûòîñòü - çàêðûòîñòü ê íîâîìó îïûòó. : ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè. ';
    end;
  case bls[4] of
    0..3: Form51.Label4.Caption:= 'Ñîçíàòåëüíîñòü - íåñîáðàííîñòü.: ' + 'íèçêèé óðîâåíü âûðàæåííîñòè. ';
    4..6:  Form51.Label4.Caption:= 'Ñîçíàòåëüíîñòü - íåñîáðàííîñòü.: ' + 'íèæå ñðåäíåãî. ';
    7..9: Form51.Label4.Caption:= 'Ñîçíàòåëüíîñòü - íåñîáðàííîñòü.: ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè. ';
    10..12: Form51.Label4.Caption:= 'Ñîçíàòåëüíîñòü - íåñîáðàííîñòü.: ' + 'âûøå ñðåäíåãî. ';
    13..16: Form51.Label4.Caption:= 'Ñîçíàòåëüíîñòü - íåñîáðàííîñòü.: ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè. ';
    end;
  case bls[5] of
    0..3: Form51.Label5.Caption:= 'Äîáðîæåëàòåëüíîñòü - âðàæäåáíîñòü: ' + 'íèçêèé óðîâåíü âûðàæåííîñòè. ';
    4..6:  Form51.Label5.Caption:= 'Äîáðîæåëàòåëüíîñòü - âðàæäåáíîñòü: ' + 'íèæå ñðåäíåãî. ';
    7..9: Form51.Label5.Caption:= 'Äîáðîæåëàòåëüíîñòü - âðàæäåáíîñòü: ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè. ';
    10..12: Form51.Label5.Caption:= 'Äîáðîæåëàòåëüíîñòü - âðàæäåáíîñòü: ' + 'âûøå ñðåäíåãî. ';
    13..16: Form51.Label5.Caption:= 'Äîáðîæåëàòåëüíîñòü - âðàæäåáíîñòü: ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè. ';
    end;
    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form51.Label8.Caption:=myDate;
    Form51.Memo1.Visible:=True;
    Form51.Memo1.Clear;
Form51.ShowModal;
end;

procedure Key_21;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
i:integer;
ch: Array[1..57] of Array[1..2] of Integer;
shkala: Array[1..3] of Integer;
begin
For I:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\21.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch[i,1]:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   ch[i,2]:=StrToInt(VarToStr(XmLquestion.Attributes['bal']));
  end;
For i:=1 to countquest do
  begin
    if Select[i-1]=ch[i,2] then
      begin
        case ch[i,1] of
          1:shkala[1]:=shkala[1]+1;
          2:shkala[2]:=shkala[2]+1;
          3:shkala[3]:=shkala[3]+1;
         end;
      end;
  end;
myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
Form66.Label2.Caption:=myDate;
Form66.Memo1.Clear;
Form66.Memo2.Clear;
case shkala[1] of
  1..7: begin
  Form66.Memo1.Lines.Add('Èíòðîâåðò:');
  Form66.Memo1.Lines.Add('Çíà÷èòåëüíàÿ èíòðîâåðñèÿ ');
  Form66.Memo1.Lines.Add('');
  Form66.Memo2.Lines.Add('ÈÍÒÐÎÂÅÐÒÛ - ëþäè, äëÿ êîòîðûõ íàèáîëüøèé èíòåðåñ ïðåäñòàâëÿþò ÿâëåíèÿ ñîáñòâåííîãî âíóòðåííåãî ìèðà, äëÿ íèõ ñâîè òåîðèè è	îöåíêè ðåàëüíîñòè âàæíåå, ÷åì ñàìà ðåàëüíîñòü. ');
  Form66.Memo2.Text:=Form66.Memo2.Text + 'Îíè ñêëîííû ê ðàçìûøëåíèÿì, ñàìîàíàëèçó, íåîáùèòåëüíû, çàìêíóòû, èñïûòûâàþò çàòðóäíåíèÿ â ñîöèàëüíîé àäàïòàöèè, ÷àñòî ñîöèàëüíî ïàññèâíû.';
  Form66.Memo2.Text:=Form66.Memo2.Text + 'Îáû÷íî áûâàþò áîëåå ÷óâñòâèòåëüíû ê âíåøíèì ðàçäðàæèòåëÿì, âåðíåå ðàñïîçíàþò öâåòà, çâóêè, áîëåå îñòîðîæíû, àêêóðàòíû è ïåäàíòè÷íû, ';
  Form66.Memo2.Text:=Form66.Memo2.Text + 'ïîêàçûâàþò íàèëó÷øèå ðåçóëüòàòû ïî òåñòàì èíòåëëåêòà, ëó÷øå äðóãèõ ó÷àòñÿ â øêîëå è âóçå, ëó÷øå ñïðàâëÿþòñÿ ñ ìîíîòîííîé ðàáîòîé. ';
  Form66.Memo2.Text:=Form66.Memo2.Text + 'Íà÷àëüíèêè, çàíèìàþùèå âûñîêèå ïîñòû, íå òðåáóþùèå ïîñòîÿííîãî îáùåíèÿ ñ ëþäüìè, ÷àùå âñåãî èíòðîâåðòû.';
  end;

  8..11: begin
  Form66.Memo1.Lines.Add('Èíòðîâåðò:');
  Form66.Memo1.Lines.Add('Óìåðåííàÿ èíòðîâåðñèÿ ');
  Form66.Memo1.Lines.Add('');
  Form66.Memo2.Lines.Add('ÈÍÒÐÎÂÅÐÒÛ - ëþäè, äëÿ êîòîðûõ íàèáîëüøèé èíòåðåñ ïðåäñòàâëÿþò ÿâëåíèÿ ñîáñòâåííîãî âíóòðåííåãî ìèðà, äëÿ íèõ ñâîè òåîðèè è	îöåíêè ðåàëüíîñòè âàæíåå, ÷åì ñàìà ðåàëüíîñòü. ');
  Form66.Memo2.Text:=Form66.Memo2.Text + 'Îíè ñêëîííû ê ðàçìûøëåíèÿì, ñàìîàíàëèçó, íåîáùèòåëüíû, çàìêíóòû, èñïûòûâàþò çàòðóäíåíèÿ â ñîöèàëüíîé àäàïòàöèè, ÷àñòî ñîöèàëüíî ïàññèâíû. ';
  Form66.Memo2.Text:=Form66.Memo2.Text + 'Îáû÷íî áûâàþò áîëåå ÷óâñòâèòåëüíû ê âíåøíèì ðàçäðàæèòåëÿì, âåðíåå ðàñïîçíàþò öâåòà, çâóêè, áîëåå îñòîðîæíû, àêêóðàòíû è ïåäàíòè÷íû, ';
  Form66.Memo2.Text:=Form66.Memo2.Text + 'ïîêàçûâàþò íàèëó÷øèå ðåçóëüòàòû ïî òåñòàì èíòåëëåêòà, ëó÷øå äðóãèõ ó÷àòñÿ â øêîëå è âóçå, ëó÷øå ñïðàâëÿþòñÿ ñ ìîíîòîííîé ðàáîòîé. ';
  Form66.Memo2.Text:=Form66.Memo2.Text + 'Íà÷àëüíèêè, çàíèìàþùèå âûñîêèå ïîñòû, íå òðåáóþùèå ïîñòîÿííîãî îáùåíèÿ ñ ëþäüìè, ÷àùå âñåãî èíòðîâåðòû. ';
  end;


  12..18: begin
  Form66.Memo1.Lines.Add('Ýêñòðàâåðò:');
  Form66.Memo1.Lines.Add('Óìåðåííàÿ ýêñòðàâåðñèÿ ');
  Form66.Memo1.Lines.Add('');
  Form66.Memo2.Lines.Add(' ÝÊÑÒÐÀÂÅÐÒÛ - ëþäè, îðèåíòèðîâàííûå íà îêðóæàþùèé ìèð, íåïîñðåäñòâåííûå, àêòèâíûå, îòêðûòûå â ýìîöèîíàëüíûõ ïðîÿâëåíèÿõ, ëþáÿùèå äâèæåíèå è ðèñê . ');
  Form66.Memo2.Text:=Form66.Memo2.Text + 'Äëÿ íèõ õàðàêòåðíà èìïóëüñèâíîñòü, ãèáêîñòü ïîâåäåíèÿ , îáùèòåëüíîñòü è ñîöèàëüíàÿ àäàïòèðîâàííîñòü. Îáû÷íî ýòî àêòèâíûå, øóìíûå ëþäè, "äóøà êîìïàíèè", çàâîäèëû, îòëè÷íûå áèçíåñìåíû è	îðãàíèçàòîðû, ';
  Form66.Memo2.Text:=Form66.Memo2.Text + 'îáëàäàþò âíåøíèì îáàÿíèåì, ïðÿìîëèíåéíû â ñóæäåíèÿõ.  Êàê ïðàâèëî, îðèåíòèðóþòñÿ íà âíåøíþþ îöåíêó, ïîýòîìó ìîãóò õîðîøî ñäàâàòü ýêçàìåíû, òÿíóòñÿ ê íîâûì âïå÷àòëåíèÿì è îùóùåíèÿì, îïòèìèñòè÷íû, ';
  Form66.Memo2.Text:=Form66.Memo2.Text + ' õîðîøî ñïðàâëÿþòñÿ ñ ðàáîòîé, òðåáóþùåé áûñòðîãî ïðèíÿòèÿ ðåøåíèÿ. Âìåñòå ñ òåì ýêñòðàâåðòû èìåþò ïðåäðàñïîëîæåííîñòü ê íåñ÷àñòíûì ñëó÷àÿì. ';
  end;

  19..24: begin
  Form66.Memo1.Lines.Add('Ýêñòðàâåðò:');
  Form66.Memo1.Lines.Add('Çíà÷èòåëüíàÿ ýêñòðàâåðñèÿ ');
  Form66.Memo1.Lines.Add('');
  Form66.Memo2.Lines.Add(' ÝÊÑÒÐÀÂÅÐÒÛ - ëþäè, îðèåíòèðîâàííûå íà îêðóæàþùèé ìèð, íåïîñðåäñòâåííûå, àêòèâíûå, îòêðûòûå â ýìîöèîíàëüíûõ ïðîÿâëåíèÿõ, ëþáÿùèå äâèæåíèå è ðèñê .');
  Form66.Memo2.Text:=Form66.Memo2.Text + 'Äëÿ íèõ õàðàêòåðíà èìïóëüñèâíîñòü, ãèáêîñòü ïîâåäåíèÿ , îáùèòåëüíîñòü è ñîöèàëüíàÿ àäàïòèðîâàííîñòü. Îáû÷íî ýòî àêòèâíûå, øóìíûå ëþäè, "äóøà êîìïàíèè", çàâîäèëû, îòëè÷íûå áèçíåñìåíû è	îðãàíèçàòîðû, ';
  Form66.Memo2.Text:=Form66.Memo2.Text + 'îáëàäàþò âíåøíèì îáàÿíèåì, ïðÿìîëèíåéíû â ñóæäåíèÿõ.  Êàê ïðàâèëî, îðèåíòèðóþòñÿ íà âíåøíþþ îöåíêó, ïîýòîìó ìîãóò õîðîøî ñäàâàòü ýêçàìåíû, òÿíóòñÿ ê íîâûì âïå÷àòëåíèÿì è îùóùåíèÿì, îïòèìèñòè÷íû, ';
  Form66.Memo2.Text:=Form66.Memo2.Text + ' õîðîøî ñïðàâëÿþòñÿ ñ ðàáîòîé, òðåáóþùåé áûñòðîãî ïðèíÿòèÿ ðåøåíèÿ. Âìåñòå ñ òåì ýêñòðàâåðòû èìåþò ïðåäðàñïîëîæåííîñòü ê íåñ÷àñòíûì ñëó÷àÿì. ';
  end;

  end;

case shkala[2] of

  0..10: begin
  Form66.Memo1.Lines.Add('Âû ýìîöèîíàëüíî óñòîé÷èâû:');
  Form66.Memo1.Lines.Add('Âûñîêàÿ óñòîé÷èâîñòü. ');
  Form66.Memo1.Lines.Add('');
  end;

  11..12: begin
  Form66.Memo1.Lines.Add('Âû ýìîöèîíàëüíî óñòîé÷èâû:');
  Form66.Memo1.Lines.Add('Ñðåäíÿÿ óñòîé÷èâîñòü. ');
  Form66.Memo1.Lines.Add('');
  end;

  13..18: begin
  Form66.Memo1.Lines.Add('Âû ýìîöèîíàëüíî íåóñòîé÷èâû:');
  Form66.Memo1.Lines.Add('Âûñîêàÿ ñòåïåíü íåóñòîé÷èâîñòè. ');
  Form66.Memo1.Lines.Add('');
  end;

  19..24: begin
  Form66.Memo1.Lines.Add('Âû ýìîöèîíàëüíî íåóñòîé÷èâû:');
  Form66.Memo1.Lines.Add('Î÷åíü âûñîêàÿ íåóñòîé÷èâîñòü. ');
  Form66.Memo1.Lines.Add('');
  end;


  end;

case shkala[3] of

  0..4: begin
  Form66.Memo1.Lines.Add('Âû îòêðîâåííû:');
  Form66.Memo1.Lines.Add('Âàøè îòâåòû áûëè èñêðåííå. ');
  end;

  5..9: begin
  Form66.Memo1.Lines.Add('Âû ñêðûòíû:');
  Form66.Memo1.Lines.Add('Âàøè îòâåòû íå âñåãäà áûëè èñêðåííèìè è ñâèäåòåëüñòâóþò î òåíäåíöèè îðèåíòèðîâàòüñÿ íà ñîçäàíèå õîðîøåãî âïå÷àòëåíèÿ î ñåáå. ');
  end;



  end;

Form66.Memo1.Visible:=True;
Form66.N1.Visible:=True;
Form66.ShowModal;
end;

procedure Key_38;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
ch,i,bls:integer;
begin
ch:=0;
bls:=0;
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\38.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   if ch=select[i-1] then
    bls:=bls+1
   else
   bls:=bls;
  end;
  Form66.Memo1.Clear;
  case Form8.pol of
    0:begin
      case bls of
        8..16: Form66.Memo1.Lines.Add('Óðîâíè ýìïàòè÷åñêèõ òåíäåíöèé: ' + 'íèçêèé. ');
        17..24:  Form66.Memo1.Lines.Add('Óðîâíè ýìïàòè÷åñêèõ òåíäåíöèé: ' + 'ñðåäíèé. ');
        25..33: Form66.Memo1.Lines.Add('Óðîâíè ýìïàòè÷åñêèõ òåíäåíöèé: ' + 'âûñîêèé. ');
      end;
    end;
    1:begin
      case bls of
        12..21: Form66.Memo1.Lines.Add('Óðîâíè ýìïàòè÷åñêèõ òåíäåíöèé: ' + 'íèçêèé. ');
        22..28:  Form66.Memo1.Lines.Add('Óðîâíè ýìïàòè÷åñêèõ òåíäåíöèé: ' + 'ñðåäíèé. ');
        29..33: Form66.Memo1.Lines.Add('Óðîâíè ýìïàòè÷åñêèõ òåíäåíöèé: ' + 'âûñîêèé. ');
      end;

    end;
    end;
    Form66.Memo2.Clear;
    Form66.Memo2.Visible:=False;

    Form66.Memo2.Lines.Add('Ýìîöèîíàëüíàÿ îòçûâ÷èâîñòü íà ïåðåæèâàíèÿ äðóãèõ, íàçûâàåìàÿ â ïñèõîëîãèè ýìïàòèåé, îòíîñèòñÿ ê âûñøèì íðàâñòâåííûì ÷óâñòâàì. Ýìïàòèÿ â ôîðìå ñî÷óâñòâèÿ èëè ñîïåðåæèâàíèÿ, ');
    Form66.Memo2.Text:=Form66.Memo2.Text + 'áóäü òî ñîðàäîâàíèå èëè ñîïå÷àëèâàíèå, ñâÿçàíà ñ óìåíèåì ÷åëîâåêà "ïðîíèêàòü" â ÷óâñòâåííûé ìèð äðóãèõ. Â ðàçíîîáðàçíûõ æèçíåííûõ ñèòóàöèÿõ ýìîöèîíàëüíûé îòêëèê ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'çàâèñèò îò àäåêâàòíîñòè âîñïðèÿòèÿ ïåðåæèâàíèé ëþäåé è ýìîöèé æèâîòíûõ, à òàêæå îò ïðåäñòàâëåíèÿ î âûçâàâøèõ èõ ïðè÷èíàõ. ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'Òàêàÿ îòçûâ÷èâîñòü ñòàíîâèòñÿ ïîáóäèòåëüíîé ñèëîé, íàïðàâëåííîé íà îêàçàíèå ïîìîùè.';
    
    Form66.N3.Visible:=True;
    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form66.Label2.Caption:=myDate;
    Form66.Memo1.Visible:=True;
    Form66.ShowModal;
end;


procedure Key_37;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
ch,i,bls,bls2:integer;
begin
ch:=0;
bls:=0;
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\37.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   if ch=select[i-1] then
        case i of
        1,5,9,13,17,21,25,29,33,37,3,7,11,15,19,23,27,31,35,39:begin
        bls:=bls+1;
        end;
        2,6,10,14,18,22,26,30,34,38,4,8,12,16,20,24,28,32,36,40:begin
        bls2:=bls2+1;
        end;
        end;
  end;
  Form66.Memo1.Clear;

  case bls of

    1..4: Form66.Memo1.Lines.Add('Êîììóíèêàòèâíûå ñêëîííîñòè: ' + 'î÷åíü íèçêèé óðîâåíü. ');
    5..8:  Form66.Memo1.Lines.Add('Êîììóíèêàòèâíûå ñêëîííîñòè: ' + 'íèçêèé óðîâåíü. ');
    9..12: Form66.Memo1.Lines.Add('Êîììóíèêàòèâíûå ñêëîííîñòè: ' + 'ñðåäíèé óðîâåíü. ');
    13..16:Form66.Memo1.Lines.Add('Êîììóíèêàòèâíûå ñêëîííîñòè: ' + 'âûñîêèé óðîâåíü. ');
    17..20:Form66.Memo1.Lines.Add('Êîììóíèêàòèâíûå ñêëîííîñòè: ' + 'âûñøèé óðîâåíü. ');
    end;

     case bls2 of

    1..4: Form66.Memo1.Lines.Add('Îðãàíèçàòîðñêèå ñêëîííîñòè: ' + 'î÷åíü íèçêèé óðîâåíü. ');
    5..8:  Form66.Memo1.Lines.Add('Îðãàíèçàòîðñêèå ñêëîííîñòè: ' + 'íèçêèé óðîâåíü. ');
    9..12: Form66.Memo1.Lines.Add('Îðãàíèçàòîðñêèå ñêëîííîñòè: ' + 'ñðåäíèé óðîâåíü. ');
    13..16:Form66.Memo1.Lines.Add('Îðãàíèçàòîðñêèå ñêëîííîñòè: ' + 'âûñîêèé óðîâåíü. ');
    17..20:Form66.Memo1.Lines.Add('Îðãàíèçàòîðñêèå ñêëîííîñòè: ' + 'âûñøèé óðîâåíü. ');
    end;
    Form66.Memo2.Clear;
    Form66.Memo2.Visible:=False;
    case bls of
    1..4: Form66.Memo2.Lines.Add('Îðãàíèçàòîðñêèå ñêëîííîñòè: ' + 'ñðåäíèé óðîâåíü. ');
    5..8:begin
    Form66.Memo2.Lines.Add('Èñïûòóåìûå, ñ íèçêèì óðîâíåì êîììóíèêàòèâíûõ è îðãàíèçàòîðñêèõ ñêëîííîñòåé íå ñòðåìÿòñÿ ê îáùåíèþ, ïðåäïî÷èòàþò ïðîâîäèòü âðåìÿ íàåäèíå ñ ñîáîé. Â íîâîé êîìïàíèè èëè êîëëåêòèâå ÷óâñòâóþò ñåáÿ ñêîâàííî.');
    Form66.Memo2.Text:=Form66.Memo2.Text + 'Èñïûòûâàþò òðóäíîñòè â óñòàíîâëåíèè êîíòàêòîâ ñ ëþäüìè. Íå îòñòàèâàþò ñâîåãî ìíåíèÿ, òÿæåëî ïåðåæèâàþò îáèäû. Ðåäêî ïðîÿâëÿþò èíèöèàòèâó, èçáåãàþò ïðèíÿòèÿ ñàìîñòîÿòåëüíûõ ðåøåíèé.';
    end;
    9..12:begin
    Form66.Memo2.Lines.Add('Èñïûòóåìûå, ñî ñðåäíåì óðîâíåì ñðåäíèì óðîâíåì ïðîÿâëåíèÿ êîììóíèêàòèâíûõ è îðãàíèçàòîðñêèõ ñêëîííîñòåé, èìåþò êîììóíèêàòèâíûå è îðãàíèçàòîðñêèå ñêëîííîñòè íèæå ñðåäíåãî óðîâíÿ. ');
    Form66.Memo2.Text:=Form66.Memo2.Text + 'Îíè íå ñòðåìÿòñÿ ê îáùåíèþ, ÷óâñòâóþò ñåáÿ ñêîâàííî â íîâîé êîìïàíèè, êîëëåêòèâå, ïðåäïî÷èòàþò ïðîâîäèò âðåìÿ íàåäèíå ñ ñîáîé, îãðàíè÷èâàþò ñâîè çíàêîìñòâà, ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'èñïûòûâàþò òðóäíîñòè â óñòàíîâëåíèè êîíòàêòîâ ñ ëþäüìè è â âûñòóïëåíèè ïåðåä àóäèòîðèåé, ïëîõî îðèåíòèðóþòñÿ â íåçíàêîìîé ñèòóàöèè, íå îòñòàèâàþò ñâîå ìíåíèå, òÿæåëî ïåðåæèâàþò îáèäû. ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'Âî ìíîãèõ äåëàõ îíè ïðåäïî÷èòàþò èçáåãàòü ïðîÿâëåíèÿ ñàìîñòîÿòåëüíûõ ðåøåíèé è èíèöèàòèâû.';
    end;

    13..16:begin
    Form66.Memo2.Lines.Add('Èñïûòóåìûå, âûñîêèì óðîâíåì ïðîÿâëåíèÿ êîììóíèêàòèâíûõ è îðãàíèçàòîðñêèõ ñêëîííîñòåé, îòíîñÿòñÿ ê ãðóïïå ñ âûñîêèì óðîâíåì ïðîÿâëåíèÿ êîììóíèêàòèâíûõ è îðãàíèçàòîðñêèõ ñêëîííîñòåé. ');
    Form66.Memo2.Text:=Form66.Memo2.Text + 'Îíè íå òåðÿþòñÿ â íîâîé îáñòàíîâêå, áûñòðî íàõîäÿò äðóçåé, ïîñòîÿííî ñòðåìÿòñÿ ðàñøèðèòü êðóã ñâîèõ çíàêîìûõ, çàíèìàþòñÿ îáùåñòâåííîé äåÿòåëüíîñòüþ, ïîìîãàþò áëèçêèì, äðóçüÿì , ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'ïðîÿâëÿþò èíèöèàòèâó â îáùåíèè, ñ óäîâîëüñòâèåì ïðèíèìàþò ó÷àñòèå â îðãàíèçàöèè îáùåñòâåííûõ ìåðîïðèÿòèé, ñïîñîáíû ïðèíèìàòü ñàìîñòîÿòåëüíîå ðåøåíèå â òðóäíîé ñèòóàöèè. ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'Âñå ýòî îíè äåëàþò íå ïî ïðèíóæäåíèþ, à ñîãëàñíî âíóòðåííèì óñòðåìëåíèÿì.';
    end;

    17..20:begin
    Form66.Memo2.Lines.Add('Èñïûòóåìûå, c âûñøåì óðîâíåì êîììóíèêàòèâíûõ è îðãàíèçàòîðñêèõ ñêëîííîñòåé, îáëàäàþò î÷åíü âûñîêèì óðîâíåì ïðîÿâëåíèÿ êîììóíèêàòèâíûõ è îðãàíèçàòîðñêèõ ñêëîííîñòåé. ');
    Form66.Memo2.Text:=Form66.Memo2.Text + 'Îíè èñïûòûâàþò, ïîòðåáíîñòü â êîììóíèêàòèâíîé è îðãàíèçàòîðñêîé äåÿòåëüíîñòè è àêòèâíî ñòðåìÿòñÿ ê íåé, áûñòðî îðèåíòèðóþòñÿ â òðóäíûõ ñèòóàöèÿõ, ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'èñïûòûâàþò òðóäíîñòè â óñòàíîâëåíèè êîíòàêòîâ ñ ëþäüìè è â âûñòóïëåíèè ïåðåä àóäèòîðèåé, ïëîõî îðèåíòèðóþòñÿ â íåçíàêîìîé ñèòóàöèè,  ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'íå îòñòàèâàþò ñâîå ìíåíèå, òÿæåëî ïåðåæèâàþò îáèäû.íåïðèíóæäåííî âåäóò ñåáÿ â íîâîì êîëëåêòèâå, ýòî èíèöèàòèâíûå ëþäè, êîòîðûå ïðåäïî÷èòàþò ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'â âàæíîì äåëå èëè â ñîçäàâøåéñÿ ñëîæíîé ñèòóàöèè ïðèíèìàòü ñàìîñòîÿòåëüíûå ðåøåíèÿ, îòñòàèâàþò ñâîå ìíåíèå è äîáèâàþòñÿ, ÷òîáû îíî áûëî ïðèíÿòî äðóãèìè. ';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'Îíè ìîãóò âíåñòè îæèâëåíèå â íåçíàêîìóþ êîìïàíèþ, ëþáÿò îðãàíèçîâûâàòü ðàçíûå èãðû, ìåðîïðèÿòèÿ, íàñòîé÷èâû â äåÿòåëüíîñòè, êîòîðàÿ èõ ïðèâëåêàåò, è ñàìè èùóò òàêèå äåëà,';
    Form66.Memo2.Text:=Form66.Memo2.Text + 'êîòîðûå áû óäîâëåòâîðÿëè èõ ïîòðåáíîñòü â êîììóíèêàöèè è îðãàíèçàòîðñêîé äåÿòåëüíîñòè.';
    end;
    end;
    Form66.N2.Visible:=True;
    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form66.Label2.Caption:=myDate;
    Form66.Memo1.Visible:=True;
    Form66.ShowModal;
end;


procedure Key_36;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
ch,i,bls:integer;
begin
ch:=0;
bls:=0;
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\36.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   if ch=select[i-1] then
    bls:=bls+1
   else
   bls:=bls;
  end;
  Form66.Memo1.Clear;
  case bls of

    1..7: Form66.Memo1.Lines.Add('Ñïîñîáíîñòü äåëàòü ëîãè÷åñêèå çàêëþ÷åíèÿ íà îñíîâå çàäàííîé èíñòðóêöèè è èíôîðìàöèè: ' + 'Ñïîñîáíîñòè îòñóòñòâóþò. ');
    8..11:  Form66.Memo1.Lines.Add('Ñïîñîáíîñòü äåëàòü ëîãè÷åñêèå çàêëþ÷åíèÿ íà îñíîâå çàäàííîé èíñòðóêöèè è èíôîðìàöèè: ' + 'Íèçêèé óðîâåíü ñïîñîáíîñòåé. ');
    12..15: Form66.Memo1.Lines.Add('Ñïîñîáíîñòü äåëàòü ëîãè÷åñêèå çàêëþ÷åíèÿ íà îñíîâå çàäàííîé èíñòðóêöèè è èíôîðìàöèè: ' + 'Ñðåäíèé óðîâåíü ñïîñîáíîñòåé. ');
    16..34:Form66.Memo1.Lines.Add('Ñïîñîáíîñòü äåëàòü ëîãè÷åñêèå çàêëþ÷åíèÿ íà îñíîâå çàäàííîé èíñòðóêöèè è èíôîðìàöèè: ' + 'Âûñîêèé óðîâåíü ñïîñîáíîñòåé. ');
    end;

    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form66.Label2.Caption:=myDate;
    Form66.Memo1.Visible:=True;
    Form66.ShowModal;
end;

procedure Key_35;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
ch,i,bls:integer;
begin
ch:=0;
bls:=0;
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\35.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   if ch=select[i-1] then
    bls:=bls+1
   else
   bls:=bls;
  end;
  Form66.Memo1.Clear;
  case bls of

    1..4: Form66.Memo1.Lines.Add('Ñïîñîáíîñòü ê âûÿâëåíèþ ëîãè÷åñêèõ çàêîíîìåðíîñòåé â ÷èñëîâûõ ïîñëåäîâàòåëüíîñòÿõ: ' + 'Ñïîñîáíîñòè îòñóòñòâóþò. ');
    5..7:  Form66.Memo1.Lines.Add('Ñïîñîáíîñòü ê âûÿâëåíèþ ëîãè÷åñêèõ çàêîíîìåðíîñòåé â ÷èñëîâûõ ïîñëåäîâàòåëüíîñòÿõ: ' + 'Íèçêèé óðîâåíü ñïîñîáíîñòåé. ');
    8..11: Form66.Memo1.Lines.Add('Ñïîñîáíîñòü ê âûÿâëåíèþ ëîãè÷åñêèõ çàêîíîìåðíîñòåé â ÷èñëîâûõ ïîñëåäîâàòåëüíîñòÿõ: ' + 'Ñðåäíèé óðîâåíü ñïîñîáíîñòåé. ');
    12..22:Form66.Memo1.Lines.Add('Ñïîñîáíîñòü ê âûÿâëåíèþ ëîãè÷åñêèõ çàêîíîìåðíîñòåé â ÷èñëîâûõ ïîñëåäîâàòåëüíîñòÿõ: ' + 'Âûñîêèé óðîâåíü ñïîñîáíîñòåé. ');
    end;

    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form66.Label2.Caption:=myDate;
    Form66.Memo1.Visible:=True;
    Form66.ShowModal;
end;

procedure Key_34;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
myDate:string;
ch,i,bls:integer;
begin
ch:=0;
bls:=0;
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\34.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   if ch=select[i-1] then
    bls:=bls+1
   else
   bls:=bls;
  end;
  Form66.Memo1.Clear;
  case bls of

    1..11: Form66.Memo1.Lines.Add('Ñïîñîáíîñòü â óñòàíîâëåíèè ëîãè÷åñêèõ ñâÿçåé ìåæäó ñëîâàìè, íà îñíîâå èìåþùèõñÿ çíàíèé î çíà÷åíèè êàæäîãî ñëîâà: ' + 'Ñïîñîáíîñòè îòñóòñòâóþò. ');
    12..20:  Form66.Memo1.Lines.Add('Ñïîñîáíîñòü â óñòàíîâëåíèè ëîãè÷åñêèõ ñâÿçåé ìåæäó ñëîâàìè, íà îñíîâå èìåþùèõñÿ çíàíèé î çíà÷åíèè êàæäîãî ñëîâà: ' + 'Íèçêèé óðîâåíü ñïîñîáíîñòåé. ');
    21..28: Form66.Memo1.Lines.Add('Ñïîñîáíîñòü â óñòàíîâëåíèè ëîãè÷åñêèõ ñâÿçåé ìåæäó ñëîâàìè, íà îñíîâå èìåþùèõñÿ çíàíèé î çíà÷åíèè êàæäîãî ñëîâà: ' + 'Ñðåäíèé óðîâåíü ñïîñîáíîñòåé. ');
    29..43:Form66.Memo1.Lines.Add('Ñïîñîáíîñòü â óñòàíîâëåíèè ëîãè÷åñêèõ ñâÿçåé ìåæäó ñëîâàìè, íà îñíîâå èìåþùèõñÿ çíàíèé î çíà÷åíèè êàæäîãî ñëîâà: ' + 'Âûñîêèé óðîâåíü ñïîñîáíîñòåé. ');
    end;

    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form66.Label2.Caption:=myDate;
    Form66.Memo1.Visible:=True;
    Form66.ShowModal;
end;

procedure Key_32;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
l:Tlabel;
bls:Array[1..7] of Integer;
myDate,word:string;
ch,i:integer;
begin
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\32.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));

   case ch of
   1:begin
    case select[i-1] of
      1:bls[1]:=bls[1] + 1;
      2:bls[1]:=bls[1] + 0;
     end;
    Form51.Label2.Visible:=True;

   end;
   2:begin
   case select[i-1] of
      1:bls[2]:=bls[2] + 1;
      2:bls[2]:=bls[2] + 0;
      end;
    Form51.Label3.Visible:=True;

   end;
   3:begin
   case select[i-1] of
      1:bls[3]:=bls[3] + 1;
      2:bls[3]:=bls[3] + 0;
      end;
    Form51.Label4.Visible:=True;

   end;
   4:begin
   case select[i-1] of
      1:bls[4]:=bls[4] + 1;
      2:bls[4]:=bls[4] + 0;
      end;
    Form51.Label5.Visible:=True;

   end;
   5:begin
   case select[i-1] of
      1:bls[5]:=bls[5] + 1;
      2:bls[5]:=bls[5] + 0;
      end;
    Form51.Label6.Visible:=True;

   end;
   6:begin
   case select[i-1] of
      1:bls[6]:=bls[6] + 1;
      2:bls[6]:=bls[6] + 0;
      end;
    Form51.Label9.Visible:=True;

   end;
   7:begin
    case select[i-1] of
      1:bls[7]:=bls[7] + 1;
      2:bls[7]:=bls[7] + 0;
      end;
    Form51.Label10.Visible:=True;

   end;
   end;
  end;
  Form51.Label1.Visible:=True;
  Form51.Label1.Caption:='Âûðàæåííîñòü ôóíêöèîíàëüíûõ ñïîñîáíîñíåé â áàëëàõ.';
  Form51.Label2.Caption:='Ìåòàôîðèçàöèÿ: ' + IntToStr(bls[1]);
  Form51.Label3.Caption:='Îáðàçíîñòü: ' + IntToStr(bls[2]);
  Form51.Label4.Caption:='Ñèìâîëèçàöèÿ: ' + IntToStr(bls[3]);
  Form51.Label5.Caption:='Âåðáàëèçàöèÿ: ' + IntToStr(bls[4]);
  Form51.Label6.Caption:='Àáñòðàãèðîâàíèå: ' + IntToStr(bls[5]);
  Form51.Label9.Caption:='Ðåôëåêñèâíîñòü: ' + IntToStr(bls[6]);
  Form51.Label10.Caption:='Ðó÷íûå íàâûêè: ' + IntToStr(bls[7]);
  Form51.Chart1.Series[0].Clear;
  for i:=1 to 7 do
begin
  if (i=6) or (i=7) then
  begin
  l:=(Form51.FindComponent('Label'+IntToStr(i+3)) as TLabel);
  end
  else
  begin
  l:=(Form51.FindComponent('Label'+IntToStr(i+1)) as TLabel);
  end;
   word:=Copy(l.Caption,1,Pos(':',l.Caption)-1);
   Form51.Chart1.Series[0].Add(bls[i],word);
end;
    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form51.Label8.Caption:=myDate;
    //Form51.Memo1.Visible:=True;
    Form51.Chart1.Visible:=True;
    //Form51.Memo1.Clear;
Form51.ShowModal;
end;


procedure Key_31;
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
bls:Array[1..5] of Integer;
myDate:string;
ch,i:integer;
begin
  for i:=1 to countquest do
  begin
   MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\31.xml');
   MyModule.XMLDocument1.Active := true;
   XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
   XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
   XmLquestion :=XmLquestions.ChildNodes[i-1];
   ch:=StrToInt(VarToStr(XmLquestion.Attributes['character']));
   case ch of
   1:begin
    case select[i-1] of
      1:bls[1]:=bls[1] + 1;
      2:bls[1]:=bls[1] + 0;
     end;
    Form51.Label1.Visible:=True;
   end;
   2:begin
   case select[i-1] of
      1:bls[2]:=bls[2] + 1;
      2:bls[2]:=bls[2] + 0;
      end;
    Form51.Label2.Visible:=True;
   end;
   3:begin
   case select[i-1] of
      1:bls[3]:=bls[3] + 1;
      2:bls[3]:=bls[3] + 0;
      end;
    Form51.Label3.Visible:=True;
   end;
   4:begin
   case select[i-1] of
      1:bls[4]:=bls[4] + 1;
      2:bls[4]:=bls[4] + 0;
      end;
    Form51.Label4.Visible:=True;
   end;
   5:begin
   case select[i-1] of
      1:bls[5]:=bls[5] + 1;
      2:bls[5]:=bls[5] + 0;
      end;
    Form51.Label5.Visible:=True;
   end;
   end;
  end;
  case bls[1] of

    0..5: Form51.Label1.Caption:= 'Ïðåäìåòíîå ìûøëåíèå: ' + 'íèçêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    6..9:  Form51.Label1.Caption:= 'Ïðåäìåòíîå ìûøëåíèå: ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    10..15: Form51.Label1.Caption:= 'Ïðåäìåòíîå ìûøëåíèå: ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    end;
  case bls[2] of
    0..5: Form51.Label2.Caption:= 'Ñèìâîëè÷åñêîå ìûøëåíèå: ' + 'íèçêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    6..9:  Form51.Label2.Caption:= 'Ñèìâîëè÷åñêîå ìûøëåíèå: ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    10..15: Form51.Label2.Caption:= 'Ñèìâîëè÷åñêîå ìûøëåíèå: ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    end;
  case bls[3] of
    0..5: Form51.Label3.Caption:= 'Çíàêîâîå ìûøëåíèå: ' + 'íèçêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    6..9:  Form51.Label3.Caption:= 'Çíàêîâîå ìûøëåíèå: ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    10..15: Form51.Label3.Caption:= 'Çíàêîâîå ìûøëåíèå: ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    end;
  case bls[4] of
    0..5: Form51.Label4.Caption:= 'Îáðàçíîå ìûøëåíèå: ' + 'íèçêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    6..9:  Form51.Label4.Caption:= 'Îáðàçíîå ìûøëåíèå: ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    10..15: Form51.Label4.Caption:= 'Îáðàçíîå ìûøëåíèå: ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    end;
  case bls[5] of
    0..5: Form51.Label5.Caption:= 'Êðåàòèâíîñòü: ' + 'íèçêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    6..9:  Form51.Label5.Caption:= 'Êðåàòèâíîñòü: ' + 'ñðåäíèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    10..15: Form51.Label5.Caption:= 'Êðåàòèâíîñòü: ' + 'âûñîêèé óðîâåíü âûðàæåííîñòè êðåàòèâíîñòè. ';
    end;
    myDate := FormatDateTime('dd.mm.yyyy"-"hh:nn:ss', Now);
    Form51.Label8.Caption:=myDate;
    Form51.Memo1.Visible:=True;
    Form51.Memo1.Clear;
Form51.ShowModal;
end;


procedure TForm50.Button1Click(Sender: TObject);
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
i,j,N: integer;
begin
Case Form49.N_glava of
  0:begin
  Case Form49.N_metod of
    0,1,2,5,6:begin
  id_vopros:=id_vopros+1;
  Select[id_vopros-1]:=radiogroup1.ItemIndex+1;
If id_vopros<countquest then
  begin
      Form50.Caption:= 'Âîïðîñ ' + IntTostr(id_vopros+1) + ' èç ' + IntToStr(countquest);
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\1' + inttostr(Form49.N_metod+1) + '.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[id_vopros];
      if (Form49.N_metod <> 6) then
      begin
      Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
      end;
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      if (Form49.N_metod <> 5) then
      begin
      for j:=0 to  XmLvariants.ChildNodes.Count-1 do
        begin
        XmLvariant :=Xmlvariants.ChildNodes[j];
        RadioGroup1.Items[j]:=VarToStr(Xmlvariant.Attributes['text']);
        end;
      end;  
  end
else
  begin
    Application.MessageBox('Âû ïðîøëè òåñò','Òåñòèðîâàíèå îêîí÷åíî');
       Case Form49.N_metod of
          0:Key_1;
          1:Key_2;
          2:Key_3;
          5:Key_6;
          6:Key_7;
        end;
      end;
     end;
   end;
  end;
  1:begin
    Case Form49.N_metod of
    0,1,2,3:begin
       id_vopros:=id_vopros+1;
  Select[id_vopros-1]:=radiogroup1.ItemIndex+1;
If id_vopros<countquest then
  begin
      Form50.Caption:= 'Âîïðîñ ' + IntTostr(id_vopros+1) + ' èç ' + IntToStr(countquest);
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\2' + inttostr(Form49.N_metod+1) + '.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[id_vopros];
      Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
      if (Form49.N_metod = 2) then
      begin
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');

      for j:=0 to  XmLvariants.ChildNodes.Count-1 do
        begin
        XmLvariant :=Xmlvariants.ChildNodes[j];
        RadioGroup1.Items[j]:=VarToStr(Xmlvariant.Attributes['text']);
        end;
      end;
 
  end
else
  begin
    Application.MessageBox('Âû ïðîøëè òåñò','Òåñòèðîâàíèå îêîí÷åíî');
       Case Form49.N_metod of
          0:Key_21;
          1:Key_22;
          2:Key_23;
          3:Key_24;
        end;
      end;
    end;
   end;
end;

2:begin
 Case Form49.N_metod of
    0,1,3,4,5,6,7:begin
       id_vopros:=id_vopros+1;
  Select[id_vopros-1]:=radiogroup1.ItemIndex+1;
If id_vopros<countquest then
  begin
      Form50.Caption:= 'Âîïðîñ ' + IntTostr(id_vopros+1) + ' èç ' + IntToStr(countquest);
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\3' + inttostr(Form49.N_metod+1) + '.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[id_vopros];
      Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
      if ((Form49.N_metod = 3) or (Form49.N_metod = 4) or (Form49.N_metod = 5)) then
      begin
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      RadioGroup1.Items.Clear;
      for j:=0 to  XmLvariants.ChildNodes.Count-1 do
        begin
        XmLvariant :=Xmlvariants.ChildNodes[j];
        RadioGroup1.Items.Add(VarToStr(Xmlvariant.Attributes['text']));
        RadioGroup1.Buttons[j].WordWrap := True;
        RadioGroup1.Buttons[j].Checked :=True;
         end;
      end;

  end
else
  begin
    Application.MessageBox('Âû ïðîøëè òåñò','Òåñòèðîâàíèå îêîí÷åíî');
       Case Form49.N_metod of
          0:Key_31;
          1:Key_32;
          3:Key_34;
          4:Key_35;
          5:Key_36;
          6:Key_37;
          7:Key_38;
        end;
      end;
    end;
   end;
end;
end;
end;

procedure TForm50.Button2Click(Sender: TObject);
var
XmlRoot: IXMLNode;
XmLquestions: IXMLNode;
XmLquestion: IXMLNode;
XmLvariants: IXMLNode;
XmLvariant: IXMLNode;
i,j: integer;
begin
  Case Form49.N_glava of
  0:begin
    Case Form49.N_metod of
    0,1,2,5,6:begin
Id_vopros:=Id_vopros-1;
If id_vopros<1 then id_vopros:=0;
      Form50.Caption:= 'Âîïðîñ ' + IntTostr(id_vopros+1) + ' èç ' + IntToStr(countquest);
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\1' + inttostr(Form49.N_metod+1) + '.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[id_vopros];
      Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      if (Form49.N_metod <> 5) then
      begin
      for j:=0 to  XmLvariants.ChildNodes.Count-1 do
        begin
        XmLvariant :=Xmlvariants.ChildNodes[j];
        RadioGroup1.Items[j]:=VarToStr(Xmlvariant.Attributes['text']);
        end;
      end;
 end;
 end;
end;
  1:begin
    Case Form49.N_metod of
    0,1,2,3:begin
Id_vopros:=Id_vopros-1;
If id_vopros<1 then id_vopros:=0;
      Form50.Caption:= 'Âîïðîñ ' + IntTostr(id_vopros+1) + ' èç ' + IntToStr(countquest);
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\2' + inttostr(Form49.N_metod+1) + '.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[id_vopros];
      Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
      if (Form49.N_metod = 2) then
      begin
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      for j:=0 to  XmLvariants.ChildNodes.Count-1 do
        begin
        XmLvariant :=Xmlvariants.ChildNodes[j];
        RadioGroup1.Items[j]:=VarToStr(Xmlvariant.Attributes['text']);
        end;
      end;

 end;
 end;
end;
 2:begin
   Case Form49.N_metod of
    0,1,3,4,5,6,7:begin
Id_vopros:=Id_vopros-1;
If id_vopros<1 then id_vopros:=0;
      Form50.Caption:= 'Âîïðîñ ' + IntTostr(id_vopros+1) + ' èç ' + IntToStr(countquest);
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\3' + inttostr(Form49.N_metod+1) + '.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLquestions := XmlRoot.ChildNodes.FindNode('questions');
      XmLquestion :=XmLquestions.ChildNodes[id_vopros];
      Label1.Caption:= VarToStr(XmLquestion.Attributes['name']);
      if ((Form49.N_metod = 3) or (Form49.N_metod = 4) or (Form49.N_metod = 5)) then
      begin
      XMlvariants:=Xmlquestion.ChildNodes.FindNode('variants');
      RadioGroup1.Items.Clear;
      for j:=0 to  XmLvariants.ChildNodes.Count-1 do
        begin
        XmLvariant :=Xmlvariants.ChildNodes[j];
        RadioGroup1.Items.Add(VarToStr(Xmlvariant.Attributes['text']));
        RadioGroup1.Buttons[j].WordWrap := True;
        RadioGroup1.Buttons[j].Checked :=True;
        end;
      end;

 end;
 end;
 end;
end;
end;
procedure TForm50.FormClose(Sender: TObject; var Action: TCloseAction);
begin
Form49.Show;
end;

procedure TForm50.N1Click(Sender: TObject);
var
XmlRoot: IXMLNode;
XmLtests: IXMLNode;
XmLtest: IXMLNode;
XmLhelp: IXMLNode;
i,j: integer;
begin
  Case Form49.N_glava of
  0:begin
    Case Form49.N_metod of
    0,1,2,3,4,5,6:begin
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\help.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLtests:= XmlRoot.ChildNodes.FindNode('tests');
      XmLtest :=XmLtests.ChildNodes[Form49.N_metod];
      Form67.Memo1.Clear;
      Form67.Memo1.Lines.Add(VarToStr(XmLtest.Attributes['name']));
      XMlhelp:=Xmltest.ChildNodes.FindNode('help');
      Form67.Memo1.Lines.Add(VarToStr(XmLhelp.Attributes['text']))
    end;
 end;
end;
1:begin
  Case Form49.N_metod of
    0,1,2,3:begin
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\help.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLtests:= XmlRoot.ChildNodes.FindNode('tests');
      XmLtest :=XmLtests.ChildNodes[Form49.N_metod+8];
      Form67.Memo1.Clear;
      Form67.Memo1.Lines.Add(VarToStr(XmLtest.Attributes['name']));
      XMlhelp:=Xmltest.ChildNodes.FindNode('help');
      Form67.Memo1.Lines.Add(VarToStr(XmLhelp.Attributes['text']))
    end;
 end;
end;
2:begin
  Case Form49.N_metod of
    0,1,3,4,5,6,7:begin
      MyModule.XMLDocument1.LoadFromFile(ExtractFilePath(Application.ExeName) +'Profi\test\help.xml');
      MyModule.XMLDocument1.Active := true;
      XmlRoot := MyModule.XMLDocument1.ChildNodes.FindNode('root');
      XmLtests:= XmlRoot.ChildNodes.FindNode('tests');
      XmLtest :=XmLtests.ChildNodes[Form49.N_metod+12];
      Form67.Memo1.Clear;
      Form67.Memo1.Lines.Add(VarToStr(XmLtest.Attributes['name']));
      XMlhelp:=Xmltest.ChildNodes.FindNode('help');
      Form67.Memo1.Lines.Add(VarToStr(XmLhelp.Attributes['text']))
    end;
 end;
end;
end;
Form67.ShowModal;
end;



end.
